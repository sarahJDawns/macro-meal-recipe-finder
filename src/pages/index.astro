---
import Button from "../components/Button.astro";
import Input from "../components/Input.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <main class="container flex w-full flex-col h-screen">
    <section>
      <div class="flex flex-row items-center justify-around">
        <Input
          id="calories"
          type="number"
          name="calories"
          label="Calories"
          placeholder="Enter max"
          required="true"
        />
        <Input
          id="carbs"
          type="number"
          name="carbs"
          label="Carbohydrates"
          placeholder="Enter max"
          required="true"
        />
        <Input
          id="fat"
          type="number"
          name="fat"
          label="Fat"
          placeholder="Enter max"
          required="true"
        />
        <Input
          id="protein"
          type="number"
          name="protein"
          label="Protein"
          placeholder="Enter min"
          required="true"
        />
      </div>
      <div class="flex flex-row justify-center gap-4">
        <Button
          style={"primary"}
          size={"sm"}
          class={"flex searchButton"}
          id="search"
        >
          Search!
        </Button>
        <Button
          style={"primary"}
          size={"sm"}
          class={"flex clearButton"}
          id="clear"
        >
          Clear!
        </Button>
      </div>
      <div class="p-5">
        <p
          class="errorMessage text-text2 font-bold text-lg mt-10 flex flex-row text-center justify-center uppercase"
        >
        </p>
      </div>
    </section>
    <section>
      <div class="display" id="display"></div>
    </section>
  </main>
</Layout>


<script type="module">

  const inputs = document.querySelectorAll("input");
  const searchButton = document.querySelector("button.searchButton");
  const clearButton = document.querySelector("button.clearButton");
  const errorMessage = document.querySelector(".errorMessage");
  const displayDiv = document.querySelector(".display");

  const apiKey = import.meta.env.API_KEY;
  // const apiKey = import.meta.env.VITE_API_KEY;

  searchButton.addEventListener("click", function () {
    const isEmpty = Array.from(inputs).some((input) => input.value === "");

    if (isEmpty) {
      errorMessage.textContent = "Please enter search criteria.";
    } else {
      errorMessage.textContent = "";
      const [maxCalories, maxCarbs, maxFat, minProtein] = Array.from(
        inputs
      ).map((input) => input.value);
       getRecipesWithMacros(maxCalories, maxCarbs, maxFat, minProtein);
    }
  });

  clearButton.addEventListener("click", () => {
    inputs.forEach((input) => (input.value = ""));
  });

async function getRecipesWithMacros(maxCalories, maxCarbs, maxFat, minProtein) {
  try {
    const url = `https://api.spoonacular.com/recipes/complexSearch?number=1&addRecipeInformation=true&instructionsRequired=true&includeIngredients=true&apiKey=${apiKey}&maxCarbs=${maxCarbs}&minProtein=${minProtein}&maxCalories=${maxCalories}&maxFat=${maxFat}`;
    const response = await fetch(url);
    const data = await response.json();

    const { results } = data;

    displayDiv.innerHTML = "";

    for (const recipe of results) {
      const { image, sourceUrl, nutrition, title, analyzedInstructions } = recipe;

      const calories = nutrition.nutrients[0].amount;
      const protein = nutrition.nutrients[1].amount;
      const fat = nutrition.nutrients[2].amount;
      const carbs = nutrition.nutrients[3].amount;

      const html = `
        <h2>${title}</h2>
        <img src="${image}" alt="${title}">
        <p><a href="${sourceUrl}">${sourceUrl}</a></p>
        <p><strong>Calories:</strong> ${calories} kcal</p>
        <p><strong>Protein:</strong> ${protein} g</p>
        <p><strong>Fat:</strong> ${fat} g</p>
        <p><strong>Carbs:</strong> ${carbs} g</p>
        <p>${analyzedInstructions[0].steps.map((step) => step.step).join(" ")}</p>
      `;

      displayDiv.innerHTML += html;
    }
  } catch (error) {
    console.error(error);
  }
}

</script>
